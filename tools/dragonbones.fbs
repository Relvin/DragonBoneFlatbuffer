// example IDL file

namespace dragonBones;

struct PointOption {
  x: float;
  y: float;
}

struct TransformOption {
  x:float;
  y:float;
  skewX:float;
  skewY:float;
  scaleX:float;
  scaleY:float;
}

table CurveDataOption {
  dataChanged: bool;
  pointList: [PointOption];
  sampling: [PointOption];
}

table FrameOption {
  position: int;
  duration: int;
    
  frameType: ubyte;
  action: string;
  event: string;
  sound: string;
  curve: CurveDataOption;
}

table TimelineOption {
  duration: int;
  scale: float;
  frameList: [FrameOption];
}

table TransformTimelineOption {
  transformed: bool;
  offset: float;
  name: string;
  originTransform: TransformOption;
  originPivot: PointOption;
  timeline : TimelineOption;
}

table DisplayOption {
  name: string;
  slotName: string;
  type: ubyte;
  transform:TransformOption;
  pivot: PointOption;
}

table SlotTimelineOption {
  name: string;
  transformed: bool;
  offset: float;

  timeline : TimelineOption;
}

table BoneDataOption{
  name: string;
  parent: string;
  length: int;

  inheritScale: bool;
  inheritRotation: bool;
  global: TransformOption;
  transform: TransformOption;
}

table SlotDataOption {
  displayIndex: int;
  zOrder: int;
  name: string;
  parent: string;
  blendMode: ubyte;
  displays: [DisplayOption];
}

table SkinDataOption {
  name: string;
  slots: [SlotDataOption];
}

table AnimationDataOption {
  name: string;
  frameRate: byte;
  fadeTime: float;
  playTimes: int;
  tweenEasing: float;
  autoTween: bool;
  lastFrameDuration: int;

  hideTimelineList: [string];
  timelineList: [TransformTimelineOption];
  slotTimelineList: [SlotTimelineOption];
}

table ArmatureOption{
  name: string;
  boneDataList: [BoneDataOption];
  skinDataList: [SkinDataOption];
  slotDataList: [SlotDataOption];
  animationData: [AnimationDataOption];
}

table DragonBones {
  name: string;
  autoSearch: bool;
  isGlobalData: bool;
  armatures: [ArmatureOption];
}

root_type DragonBones;
